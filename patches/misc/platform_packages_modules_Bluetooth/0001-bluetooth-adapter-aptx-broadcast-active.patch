From 79825f60461c67c9ba3d0606d11df869463b0875 Mon Sep 17 00:00:00 2001
From: Huy Hoang <boydaihungst@gmail.com>
Date: Fri, 1 Dec 2023 06:52:42 +0700
Subject: [PATCH] bluetooth adapter: aptx broadcast active

---
 .../bluetooth/btservice/AdapterService.java   | 18 +++++++++++++++
 .../android/bluetooth/BluetoothAdapter.java   | 23 ++++++++++++++++++-
 .../binder/android/bluetooth/IBluetooth.aidl  |  3 +++
 3 files changed, 43 insertions(+), 1 deletion(-)

diff --git a/android/app/src/com/android/bluetooth/btservice/AdapterService.java b/android/app/src/com/android/bluetooth/btservice/AdapterService.java
index 6f84636148..23f4e0c41e 100644
--- a/android/app/src/com/android/bluetooth/btservice/AdapterService.java
+++ b/android/app/src/com/android/bluetooth/btservice/AdapterService.java
@@ -4698,6 +4698,24 @@ public class AdapterService extends Service {
             return BluetoothStatusCodes.SUCCESS;
         }
 
+        @Override
+        public void isBroadcastActive(
+                AttributionSource source, SynchronousResultReceiver receiver) {
+            try {
+                receiver.send(isBroadcastActive(source));
+            } catch (RuntimeException e) {
+                receiver.propagateException(e);
+            }
+        }
+
+        @RequiresPermission(allOf = {
+                android.Manifest.permission.BLUETOOTH_CONNECT,
+                android.Manifest.permission.BLUETOOTH_PRIVILEGED,
+        })
+        private boolean isBroadcastActive(AttributionSource attributionSource) {
+            return false;
+        }
+
         @RequiresPermission(android.Manifest.permission.BLUETOOTH_SCAN)
         @Override
         public void getOffloadedTransportDiscoveryDataScanSupported(
diff --git a/framework/java/android/bluetooth/BluetoothAdapter.java b/framework/java/android/bluetooth/BluetoothAdapter.java
index 6a27b74c2f..9e54cf77a3 100644
--- a/framework/java/android/bluetooth/BluetoothAdapter.java
+++ b/framework/java/android/bluetooth/BluetoothAdapter.java
@@ -1958,7 +1958,28 @@ public final class BluetoothAdapter {
         }
         return BluetoothStatusCodes.ERROR_UNKNOWN;
     }
-
+  
+    @RequiresLegacyBluetoothPermission
+    @RequiresBluetoothConnectPermission
+    @RequiresPermission(android.Manifest.permission.BLUETOOTH_CONNECT)
+    public boolean isBroadcastActive() {
+        if (getState() != STATE_ON) {
+            return false;
+        }
+        mServiceLock.readLock().lock();
+        try {
+            if (mService != null) {
+                final SynchronousResultReceiver<Boolean> recv = SynchronousResultReceiver.get();
+                mService.isBroadcastActive(mAttributionSource, recv);
+                return recv.awaitResultNoInterrupt(getSyncTimeout()).getValue(false);
+            }
+        } catch (RemoteException | TimeoutException e) {
+            Log.e(TAG, e.toString() + "\n" + Log.getStackTraceString(new Throwable()));
+        } finally {
+            mServiceLock.readLock().unlock();
+        }
+        return false;
+    }
     /**
      * Get the timeout duration of the {@link #SCAN_MODE_CONNECTABLE_DISCOVERABLE}.
      *
diff --git a/system/binder/android/bluetooth/IBluetooth.aidl b/system/binder/android/bluetooth/IBluetooth.aidl
index 62b094d4cb..701b180969 100644
--- a/system/binder/android/bluetooth/IBluetooth.aidl
+++ b/system/binder/android/bluetooth/IBluetooth.aidl
@@ -299,4 +299,7 @@ interface IBluetooth
 
     @JavaPassthrough(annotation="@android.annotation.RequiresPermission(allOf={android.Manifest.permission.BLUETOOTH_SCAN,android.Manifest.permission.BLUETOOTH_PRIVILEGED})")
     oneway void getOffloadedTransportDiscoveryDataScanSupported(in AttributionSource attributionSource, in SynchronousResultReceiver receiver);
+
+    @JavaPassthrough(annotation="@android.annotation.RequiresPermission(allOf={android.Manifest.permission.BLUETOOTH_CONNECT,android.Manifest.permission.BLUETOOTH_PRIVILEGED})")
+    oneway void isBroadcastActive(in AttributionSource attributionSource, in SynchronousResultReceiver receiver);
 }
-- 
2.43.0

